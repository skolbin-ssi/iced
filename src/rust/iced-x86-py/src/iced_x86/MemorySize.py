# SPDX-License-Identifier: MIT
# Copyright (C) 2018-present iced project and contributors

# ‚ö†Ô∏èThis file was generated by GENERATOR!ü¶π‚Äç‚ôÇÔ∏è

# pylint: disable=invalid-name
# pylint: disable=line-too-long
# pylint: disable=too-many-lines

"""
Size of a memory reference
"""

UNKNOWN: int = 0
"""
Unknown size or the instruction doesn't reference any memory (eg. ``LEA``)
"""
UINT8: int = 1
"""
Memory location contains a ``u8``
"""
UINT16: int = 2
"""
Memory location contains a ``u16``
"""
UINT32: int = 3
"""
Memory location contains a ``u32``
"""
UINT52: int = 4
"""
Memory location contains a ``u52``
"""
UINT64: int = 5
"""
Memory location contains a ``u64``
"""
UINT128: int = 6
"""
Memory location contains a ``u128``
"""
UINT256: int = 7
"""
Memory location contains a ``u256``
"""
UINT512: int = 8
"""
Memory location contains a ``u512``
"""
INT8: int = 9
"""
Memory location contains a ``i8``
"""
INT16: int = 10
"""
Memory location contains a ``i16``
"""
INT32: int = 11
"""
Memory location contains a ``i32``
"""
INT64: int = 12
"""
Memory location contains a ``i64``
"""
INT128: int = 13
"""
Memory location contains a ``i128``
"""
INT256: int = 14
"""
Memory location contains a ``i256``
"""
INT512: int = 15
"""
Memory location contains a ``i512``
"""
SEG_PTR16: int = 16
"""
: Memory location contains a seg:ptr pair, ``u16`` (offset) + ``u16`` (segment/selector)
"""
SEG_PTR32: int = 17
"""
: Memory location contains a seg:ptr pair, ``u32`` (offset) + ``u16`` (segment/selector)
"""
SEG_PTR64: int = 18
"""
: Memory location contains a seg:ptr pair, ``u64`` (offset) + ``u16`` (segment/selector)
"""
WORD_OFFSET: int = 19
"""
Memory location contains a 16-bit offset (``JMP/CALL WORD PTR [mem]``)
"""
DWORD_OFFSET: int = 20
"""
Memory location contains a 32-bit offset (``JMP/CALL DWORD PTR [mem]``)
"""
QWORD_OFFSET: int = 21
"""
Memory location contains a 64-bit offset (``JMP/CALL QWORD PTR [mem]``)
"""
BOUND16_WORD_WORD: int = 22
"""
Memory location contains two ``u16``s (16-bit ``BOUND``)
"""
BOUND32_DWORD_DWORD: int = 23
"""
Memory location contains two ``u32``s (32-bit ``BOUND``)
"""
BND32: int = 24
"""
32-bit ``BNDMOV``, 2 x ``u32``
"""
BND64: int = 25
"""
64-bit ``BNDMOV``, 2 x ``u64``
"""
FWORD6: int = 26
"""
Memory location contains a 16-bit limit and a 32-bit address (eg. ``LGDTW``, ``LGDTD``)
"""
FWORD10: int = 27
"""
Memory location contains a 16-bit limit and a 64-bit address (eg. ``LGDTQ``)
"""
FLOAT16: int = 28
"""
Memory location contains a ``f16``
"""
FLOAT32: int = 29
"""
Memory location contains a ``f32``
"""
FLOAT64: int = 30
"""
Memory location contains a ``f64``
"""
FLOAT80: int = 31
"""
Memory location contains a ``f80``
"""
FLOAT128: int = 32
"""
Memory location contains a ``f128``
"""
BFLOAT16: int = 33
"""
Memory location contains a ``bfloat16``
"""
FPU_ENV14: int = 34
"""
Memory location contains a 14-byte FPU environment (16-bit ``FLDENV``/``FSTENV``)
"""
FPU_ENV28: int = 35
"""
Memory location contains a 28-byte FPU environment (32/64-bit ``FLDENV``/``FSTENV``)
"""
FPU_STATE94: int = 36
"""
Memory location contains a 94-byte FPU environment (16-bit ``FSAVE``/``FRSTOR``)
"""
FPU_STATE108: int = 37
"""
Memory location contains a 108-byte FPU environment (32/64-bit ``FSAVE``/``FRSTOR``)
"""
FXSAVE_512BYTE: int = 38
"""
Memory location contains 512-bytes of ``FXSAVE``/``FXRSTOR`` data
"""
FXSAVE64_512BYTE: int = 39
"""
Memory location contains 512-bytes of ``FXSAVE64``/``FXRSTOR64`` data
"""
XSAVE: int = 40
"""
32-bit ``XSAVE`` area
"""
XSAVE64: int = 41
"""
64-bit ``XSAVE`` area
"""
BCD: int = 42
"""
Memory location contains a 10-byte ``bcd`` value (``FBLD``/``FBSTP``)
"""
TILECFG: int = 43
"""
: 64-bit location: TILECFG (``LDTILECFG``/``STTILECFG``)
"""
TILE: int = 44
"""
Tile data
"""
SEGMENT_DESC_SELECTOR: int = 45
"""
: 80-bit segment descriptor and selector: 0-7 = descriptor, 8-9 = selector
"""
KLHANDLE_AES128: int = 46
"""
384-bit AES 128 handle (Key Locker)
"""
KLHANDLE_AES256: int = 47
"""
512-bit AES 256 handle (Key Locker)
"""
PACKED16_UINT8: int = 48
"""
: 16-bit location: 2 x ``u8``
"""
PACKED16_INT8: int = 49
"""
: 16-bit location: 2 x ``i8``
"""
PACKED32_UINT8: int = 50
"""
: 32-bit location: 4 x ``u8``
"""
PACKED32_INT8: int = 51
"""
: 32-bit location: 4 x ``i8``
"""
PACKED32_UINT16: int = 52
"""
: 32-bit location: 2 x ``u16``
"""
PACKED32_INT16: int = 53
"""
: 32-bit location: 2 x ``i16``
"""
PACKED32_BFLOAT16: int = 54
"""
: 32-bit location: 2 x ``bfloat16``
"""
PACKED64_UINT8: int = 55
"""
: 64-bit location: 8 x ``u8``
"""
PACKED64_INT8: int = 56
"""
: 64-bit location: 8 x ``i8``
"""
PACKED64_UINT16: int = 57
"""
: 64-bit location: 4 x ``u16``
"""
PACKED64_INT16: int = 58
"""
: 64-bit location: 4 x ``i16``
"""
PACKED64_UINT32: int = 59
"""
: 64-bit location: 2 x ``u32``
"""
PACKED64_INT32: int = 60
"""
: 64-bit location: 2 x ``i32``
"""
PACKED64_FLOAT16: int = 61
"""
: 64-bit location: 4 x ``f16``
"""
PACKED64_FLOAT32: int = 62
"""
: 64-bit location: 2 x ``f32``
"""
PACKED128_UINT8: int = 63
"""
: 128-bit location: 16 x ``u8``
"""
PACKED128_INT8: int = 64
"""
: 128-bit location: 16 x ``i8``
"""
PACKED128_UINT16: int = 65
"""
: 128-bit location: 8 x ``u16``
"""
PACKED128_INT16: int = 66
"""
: 128-bit location: 8 x ``i16``
"""
PACKED128_UINT32: int = 67
"""
: 128-bit location: 4 x ``u32``
"""
PACKED128_INT32: int = 68
"""
: 128-bit location: 4 x ``i32``
"""
PACKED128_UINT52: int = 69
"""
: 128-bit location: 2 x ``u52``
"""
PACKED128_UINT64: int = 70
"""
: 128-bit location: 2 x ``u64``
"""
PACKED128_INT64: int = 71
"""
: 128-bit location: 2 x ``i64``
"""
PACKED128_FLOAT16: int = 72
"""
: 128-bit location: 8 x ``f16``
"""
PACKED128_FLOAT32: int = 73
"""
: 128-bit location: 4 x ``f32``
"""
PACKED128_FLOAT64: int = 74
"""
: 128-bit location: 2 x ``f64``
"""
PACKED128_2X_BFLOAT16: int = 75
"""
: 128-bit location: 4 x (2 x ``bfloat16``)
"""
PACKED256_UINT8: int = 76
"""
: 256-bit location: 32 x ``u8``
"""
PACKED256_INT8: int = 77
"""
: 256-bit location: 32 x ``i8``
"""
PACKED256_UINT16: int = 78
"""
: 256-bit location: 16 x ``u16``
"""
PACKED256_INT16: int = 79
"""
: 256-bit location: 16 x ``i16``
"""
PACKED256_UINT32: int = 80
"""
: 256-bit location: 8 x ``u32``
"""
PACKED256_INT32: int = 81
"""
: 256-bit location: 8 x ``i32``
"""
PACKED256_UINT52: int = 82
"""
: 256-bit location: 4 x ``u52``
"""
PACKED256_UINT64: int = 83
"""
: 256-bit location: 4 x ``u64``
"""
PACKED256_INT64: int = 84
"""
: 256-bit location: 4 x ``i64``
"""
PACKED256_UINT128: int = 85
"""
: 256-bit location: 2 x ``u128``
"""
PACKED256_INT128: int = 86
"""
: 256-bit location: 2 x ``i128``
"""
PACKED256_FLOAT16: int = 87
"""
: 256-bit location: 16 x ``f16``
"""
PACKED256_FLOAT32: int = 88
"""
: 256-bit location: 8 x ``f32``
"""
PACKED256_FLOAT64: int = 89
"""
: 256-bit location: 4 x ``f64``
"""
PACKED256_FLOAT128: int = 90
"""
: 256-bit location: 2 x ``f128``
"""
PACKED256_2X_BFLOAT16: int = 91
"""
: 256-bit location: 8 x (2 x ``bfloat16``)
"""
PACKED512_UINT8: int = 92
"""
: 512-bit location: 64 x ``u8``
"""
PACKED512_INT8: int = 93
"""
: 512-bit location: 64 x ``i8``
"""
PACKED512_UINT16: int = 94
"""
: 512-bit location: 32 x ``u16``
"""
PACKED512_INT16: int = 95
"""
: 512-bit location: 32 x ``i16``
"""
PACKED512_UINT32: int = 96
"""
: 512-bit location: 16 x ``u32``
"""
PACKED512_INT32: int = 97
"""
: 512-bit location: 16 x ``i32``
"""
PACKED512_UINT52: int = 98
"""
: 512-bit location: 8 x ``u52``
"""
PACKED512_UINT64: int = 99
"""
: 512-bit location: 8 x ``u64``
"""
PACKED512_INT64: int = 100
"""
: 512-bit location: 8 x ``i64``
"""
PACKED512_UINT128: int = 101
"""
: 256-bit location: 4 x ``u128``
"""
PACKED512_FLOAT32: int = 102
"""
: 512-bit location: 16 x ``f32``
"""
PACKED512_FLOAT64: int = 103
"""
: 512-bit location: 8 x ``f64``
"""
PACKED512_2X_BFLOAT16: int = 104
"""
: 512-bit location: 16 x (2 x ``bfloat16``)
"""
BROADCAST64_UINT32: int = 105
"""
Broadcast ``u32`` to 64-bits
"""
BROADCAST64_INT32: int = 106
"""
Broadcast ``i32`` to 64-bits
"""
BROADCAST64_FLOAT32: int = 107
"""
Broadcast ``f32`` to 64-bits
"""
BROADCAST128_UINT32: int = 108
"""
Broadcast ``u32`` to 128-bits
"""
BROADCAST128_INT32: int = 109
"""
Broadcast ``i32`` to 128-bits
"""
BROADCAST128_UINT52: int = 110
"""
Broadcast ``u52`` to 128-bits
"""
BROADCAST128_UINT64: int = 111
"""
Broadcast ``u64`` to 128-bits
"""
BROADCAST128_INT64: int = 112
"""
Broadcast ``i64`` to 128-bits
"""
BROADCAST128_FLOAT32: int = 113
"""
Broadcast ``f32`` to 128-bits
"""
BROADCAST128_FLOAT64: int = 114
"""
Broadcast ``f64`` to 128-bits
"""
BROADCAST256_UINT32: int = 115
"""
Broadcast ``u32`` to 256-bits
"""
BROADCAST256_INT32: int = 116
"""
Broadcast ``i32`` to 256-bits
"""
BROADCAST256_UINT52: int = 117
"""
Broadcast ``u52`` to 256-bits
"""
BROADCAST256_UINT64: int = 118
"""
Broadcast ``u64`` to 256-bits
"""
BROADCAST256_INT64: int = 119
"""
Broadcast ``i64`` to 256-bits
"""
BROADCAST256_FLOAT32: int = 120
"""
Broadcast ``f32`` to 256-bits
"""
BROADCAST256_FLOAT64: int = 121
"""
Broadcast ``f64`` to 256-bits
"""
BROADCAST512_UINT32: int = 122
"""
Broadcast ``u32`` to 512-bits
"""
BROADCAST512_INT32: int = 123
"""
Broadcast ``i32`` to 512-bits
"""
BROADCAST512_UINT52: int = 124
"""
Broadcast ``u52`` to 512-bits
"""
BROADCAST512_UINT64: int = 125
"""
Broadcast ``u64`` to 512-bits
"""
BROADCAST512_INT64: int = 126
"""
Broadcast ``i64`` to 512-bits
"""
BROADCAST512_FLOAT32: int = 127
"""
Broadcast ``f32`` to 512-bits
"""
BROADCAST512_FLOAT64: int = 128
"""
Broadcast ``f64`` to 512-bits
"""
BROADCAST128_2X_INT16: int = 129
"""
Broadcast 2 x ``i16`` to 128-bits
"""
BROADCAST256_2X_INT16: int = 130
"""
Broadcast 2 x ``i16`` to 256-bits
"""
BROADCAST512_2X_INT16: int = 131
"""
Broadcast 2 x ``i16`` to 512-bits
"""
BROADCAST128_2X_UINT32: int = 132
"""
Broadcast 2 x ``u32`` to 128-bits
"""
BROADCAST256_2X_UINT32: int = 133
"""
Broadcast 2 x ``u32`` to 256-bits
"""
BROADCAST512_2X_UINT32: int = 134
"""
Broadcast 2 x ``u32`` to 512-bits
"""
BROADCAST128_2X_INT32: int = 135
"""
Broadcast 2 x ``i32`` to 128-bits
"""
BROADCAST256_2X_INT32: int = 136
"""
Broadcast 2 x ``i32`` to 256-bits
"""
BROADCAST512_2X_INT32: int = 137
"""
Broadcast 2 x ``i32`` to 512-bits
"""
BROADCAST128_2X_BFLOAT16: int = 138
"""
Broadcast 2 x ``bfloat16`` to 128-bits
"""
BROADCAST256_2X_BFLOAT16: int = 139
"""
Broadcast 2 x ``bfloat16`` to 256-bits
"""
BROADCAST512_2X_BFLOAT16: int = 140
"""
Broadcast 2 x ``bfloat16`` to 512-bits
"""
