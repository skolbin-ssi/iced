// SPDX-License-Identifier: MIT
// Copyright (C) 2018-present iced project and contributors

use crate::MemorySizeOptions;
use lazy_static::lazy_static;
use std::collections::HashMap;

lazy_static! {
	pub(super) static ref TO_MEMORY_SIZE_OPTIONS_HASH: HashMap<&'static str, MemorySizeOptions> = {
		// GENERATOR-BEGIN: MemorySizeOptionsHash
		// ‚ö†Ô∏èThis was generated by GENERATOR!ü¶π‚Äç‚ôÇÔ∏è
		let mut h = HashMap::with_capacity(4);
		let _ = h.insert("Default", MemorySizeOptions::Default);
		let _ = h.insert("Always", MemorySizeOptions::Always);
		let _ = h.insert("Minimal", MemorySizeOptions::Minimal);
		let _ = h.insert("Never", MemorySizeOptions::Never);
		// GENERATOR-END: MemorySizeOptionsHash
		h
	};
}
