# SPDX-License-Identifier: MIT
# Copyright (C) 2018-present iced project and contributors

pushw es
pushl es
popw es
popl es
pushw cs
pushl cs
pushw ss
pushl ss
popw ss
popl ss
pushw ds
pushl ds
popw ds
popl ds
pushaw
pushal
popaw
popal
pushl $0x3412a55a
pushl $-0x5b
jo 0x804c
data32 jo 0x0000804d
jno 0x804c
data32 jno 0x0000804d
jb 0x804c
data32 jb 0x0000804d
jae 0x804c
data32 jae 0x0000804d
je 0x804c
data32 je 0x0000804d
jne 0x804c
data32 jne 0x0000804d
jbe 0x804c
data32 jbe 0x0000804d
ja 0x804c
data32 ja 0x0000804d
js 0x804c
data32 js 0x0000804d
jns 0x804c
data32 jns 0x0000804d
jp 0x804c
data32 jp 0x0000804d
jnp 0x804c
data32 jnp 0x0000804d
jl 0x804c
data32 jl 0x0000804d
jge 0x804c
data32 jge 0x0000804d
jle 0x804c
data32 jle 0x0000804d
jg 0x804c
data32 jg 0x0000804d
popl esi
popl (bx,si)
lcallw $0x7856, $0x3412
lcalll $0xbc9a, $0x78563412
pushfl
popfl
retw $-0x5aa6
retl $-0x5aa6
retw
retl
lesw (bx,si), bx
lesl (bx,si), ebx
ldsw (bx,si), bx
ldsl (bx,si), ebx
enterl $-0x5aa6, $-0x5a
leavel
loopnew 0x804c
.byte 0x66; loopnew 0x0000804d
loopnel 0x804d
.byte 0x66; loopnel 0x0000804e
loopew 0x804c
.byte 0x66; loopew 0x0000804d
loopel 0x804d
.byte 0x66; loopel 0x0000804e
loopw 0x804c
.byte 0x66; loopw 0x0000804d
loopl 0x804d
.byte 0x66; loopl 0x0000804e
jcxz 0x804c
.byte 0x66; jcxz 0x0000804d
jecxz 0x804d
.byte 0x66; jecxz 0x0000804e
callw 0x254d
calll 0xa55ab408
jmp 0x254d
data32 jmp 0xa55ab408
ljmpw $0x7856, $0x3412
ljmpl $0xbcea, $0x78563412
jmp 0x804c
data32 jmp 0x0000804d
callw *cx
callw *(bx,si)
calll *ecx
calll *(bx,si)
jmpw *dx
jmpw *(bx,si)
jmpl *edx
jmpl *(bx,si)
pushl esi
pushl (bx,si)
bndmov bnd2, bnd1
bndmov (eax), bnd1
bndcl edx, bnd1
bndcl (eax), bnd1
bndcu edx, bnd1
bndcu (eax), bnd1
bndmov bnd1, bnd2
bndmov bnd1, (eax)
bndmk (eax), bnd1
bndcn edx, bnd1
bndcn (eax), bnd1
vmreadl ecx, esi
vmreadl ebx, (bx,si)
vmwritel esi, ecx
vmwritel (bx,si), ebx
jo 0x254e
data32 jo 0x34132551
jno 0x254e
data32 jno 0x34132551
jb 0x254e
data32 jb 0x34132551
jae 0x254e
data32 jae 0x34132551
je 0x254e
data32 je 0x34132551
jne 0x254e
data32 jne 0x34132551
jbe 0x254e
data32 jbe 0x34132551
ja 0x254e
data32 ja 0x34132551
js 0x254e
data32 js 0x34132551
jns 0x254e
data32 jns 0x34132551
jp 0x254e
data32 jp 0x34132551
jnp 0x254e
data32 jnp 0x34132551
jl 0x254e
data32 jl 0x34132551
jge 0x254e
data32 jge 0x34132551
jle 0x254e
data32 jle 0x34132551
jg 0x254e
data32 jg 0x34132551
pushl fs
popl fs
pushl gs
popl gs
invept (bx,si), edx
invvpid (bx,si), edx
invpcid (bx,si), edx
pushw $-0x5aa6
pushw $-0x5b
insb dx, (edi)
insb dx, (di)
insw dx, (edi)
insw dx, (di)
insl dx, (edi)
insl dx, (di)
outsb (esi), dx
outsb (si), dx
outsw (esi), dx
outsw (si), dx
outsl (esi), dx
outsl (si), dx
movw si, fs
movw (bx,si), ds
movl esi, fs
movw (bx,si), ds
popw si
popw (bx,si)
nop
xchgl eax, eax
pushfw
popfw
movb 0xf0de, al
addr32 movb 0x78563412, al
movw 0xf0de, ax
addr32 movw 0x78563412, ax
movl 0xf0de, eax
addr32 movl 0x78563412, eax
movb al, 0xf0de
addr32 movb al, 0x78563412
movw ax, 0xf0de
addr32 movw ax, 0x78563412
movl eax, 0xf0de
addr32 movl eax, 0x78563412
movsb (esi), (edi)
movsb (si), (di)
movsw (esi), (edi)
movsw (si), (di)
movsl (esi), (edi)
movsl (si), (di)
cmpsb (edi), (esi)
cmpsb (di), (si)
cmpsw (edi), (esi)
cmpsw (di), (si)
cmpsl (edi), (esi)
cmpsl (di), (si)
stosb al, (edi)
stosb al, (di)
stosw ax, (edi)
stosw ax, (di)
stosl eax, (edi)
stosl eax, (di)
lodsb (esi), al
lodsb (si), al
lodsw (esi), ax
lodsw (si), ax
lodsl (esi), eax
lodsl (si), eax
scasb (edi), al
scasb (di), al
scasw (edi), ax
scasw (di), ax
scasl (edi), eax
scasl (di), eax
xbegin 0x0000254e
xbegin 0x34132551
enterw $-0x5aa6, $-0x5a
leavew
lretw $-0x5aa6
lretl $-0x5aa6
lretw
lretl
iretw
iretl
rolb cl, cl
rolb cl, (bx,si)
rorb cl, dl
rorb cl, (bx,si)
rclb cl, bl
rclb cl, (bx,si)
rcrb cl, ah
rcrb cl, (bx,si)
shlb cl, ch
shlb cl, (bx,si)
shrb cl, dh
shrb cl, (bx,si)
sarb cl, al
sarb cl, (bx,si)
rolw cl, cx
rolw cl, (bx,si)
roll cl, ecx
roll cl, (bx,si)
rorw cl, dx
rorw cl, (bx,si)
rorl cl, edx
rorl cl, (bx,si)
rclw cl, bx
rclw cl, (bx,si)
rcll cl, ebx
rcll cl, (bx,si)
rcrw cl, sp
rcrw cl, (bx,si)
rcrl cl, esp
rcrl cl, (bx,si)
shlw cl, bp
shlw cl, (bx,si)
shll cl, ebp
shll cl, (bx,si)
shrw cl, si
shrw cl, (bx,si)
shrl cl, esi
shrl cl, (bx,si)
sarw cl, ax
sarw cl, (bx,si)
sarl cl, eax
sarl cl, (bx,si)
fldcww (bx,si)
fnstcww (bx,si)
fnstsww (bx,si)
lcallw *(bx,si)
lcalll *(bx,si)
ljmpw *(bx,si)
ljmpl *(bx,si)
pushw si
pushw (bx,si)
sgdtw (bx,si)
sgdtl (bx,si)
sidtw (bx,si)
sidtl (bx,si)
lgdtw (bx,si)
lgdtl (bx,si)
lidtw (bx,si)
lidtl (bx,si)
larw si, cx
larw (bx,si), bx
larl esi, ecx
larl (bx,si), ebx
lslw si, cx
lslw (bx,si), bx
lsll esi, ecx
lsll (bx,si), ebx
bndldx (eax), bnd1
bndstx bnd1, (eax)
kmovw k3, k2
kmovw (bx,si), k1
kmovb k3, k2
kmovb (bx,si), k1
kmovd k3, k2
kmovd (bx,si), k1
kmovw k1, (bx,si)
kmovb k1, (bx,si)
kmovd k1, (bx,si)
kmovw ebx, k2
kmovb ebx, k2
kmovd ebx, k2
kmovw k3, edx
kmovb k3, edx
kmovd k3, edx
kortestw k3, k2
kortestq k3, k2
kortestb k3, k2
kortestd k3, k2
ktestw k3, k2
ktestq k3, k2
ktestb k3, k2
ktestd k3, k2
pushw fs
popw fs
shldw cl, cx, si
shldw cl, bx, (bx,si)
shldl cl, ecx, esi
shldl cl, ebx, (bx,si)
pushw gs
popw gs
shrdw cl, cx, si
shrdw cl, bx, (bx,si)
shrdl cl, ecx, esi
shrdl cl, ebx, (bx,si)
lssw (bx,si), bx
lssl (bx,si), ebx
lfsw (bx,si), bx
lfsl (bx,si), ebx
lgsw (bx,si), bx
lgsl (bx,si), ebx
movzbw dh, cx
movzbw (bx,si), bx
movzbl dh, ecx
movzbl (bx,si), ebx
movzxw si, cx
movzxw (bx,si), bx
movzwl si, ecx
movzwl (bx,si), ebx
movsbw dh, cx
movsbw (bx,si), bx
movsbl dh, ecx
movsbl (bx,si), ebx
movsxw si, cx
movsxw (bx,si), bx
movswl si, ecx
movswl (bx,si), ebx
cmpxchg8b (bx,si)
crc32b dh, ecx
crc32b (bx,si), ebx
crc32w si, ecx
crc32w (bx,si), ebx
crc32l esi, ecx
crc32l (bx,si), ebx
addr32 maskmovq mm3, mm2
maskmovq mm3, mm2
addr32 maskmovdqu xmm3, xmm2
maskmovdqu xmm3, xmm2
addr32 vmaskmovdqu xmm3, xmm2
vmaskmovdqu xmm3, xmm2
outsb fs:(si), dx
outsw fs:(si), dx
outsl fs:(si), dx
movsb fs:(si), es:(di)
movsw fs:(si), es:(di)
movsl fs:(si), es:(di)
cmpsb es:(di), fs:(si)
cmpsw es:(di), fs:(si)
cmpsl es:(di), fs:(si)
lodsb fs:(si), al
lodsw fs:(si), ax
lodsl fs:(si), eax
xlatb (ebx)
xlatb fs:(bx)
fs maskmovq mm3, mm2
fs maskmovdqu xmm3, xmm2
fs vmaskmovdqu xmm3, xmm2
xlatb (bx)
aam
aad
aam $-6
aad $-6
fldenvs (bx,si)
fldenvl (bx,si)
fnstenvs (bx,si)
fnstenvl (bx,si)
frstors (bx,si)
frstorl (bx,si)
fnsaves (bx,si)
fnsavel (bx,si)
monitor
addr32 monitor
mwait
movb fs:0xf0de, al
addr32 movb fs:0x78563412, al
movw fs:0xf0de, ax
addr32 movw fs:0x78563412, ax
movl fs:0xf0de, eax
addr32 movl fs:0x78563412, eax
movb al, fs:0xf0de
addr32 movb al, fs:0x78563412
movw ax, fs:0xf0de
addr32 movw ax, fs:0x78563412
movl eax, fs:0xf0de
addr32 movl eax, fs:0x78563412
movb (bx,si), cl
movb (bx,di), cl
movb (bp,si), cl
movb (bp,di), cl
movb (si), cl
movb (di), cl
movb 0xedcc, cl
movb 0x1234, cl
movb (bx), cl
movb -0x12(bx,si), cl
movb -0x12(bx,di), cl
movb -0x12(bp,si), cl
movb -0x12(bp,di), cl
movb -0x12(si), cl
movb -0x12(di), cl
movb -0x12(bp), cl
movb -0x12(bx), cl
movb 0x12(bx,si), cl
movb 0x12(bx,di), cl
movb 0x12(bp,si), cl
movb 0x12(bp,di), cl
movb 0x12(si), cl
movb 0x12(di), cl
movb 0x12(bp), cl
movb 0x12(bx), cl
movb -0x1234(bx,si), cl
movb -0x1234(bx,di), cl
movb -0x1234(bp,si), cl
movb -0x1234(bp,di), cl
movb -0x1234(si), cl
movb -0x1234(di), cl
movb -0x1234(bp), cl
movb -0x1234(bx), cl
movb 0x1234(bx,si), cl
movb 0x1234(bx,di), cl
movb 0x1234(bp,si), cl
movb 0x1234(bp,di), cl
movb 0x1234(si), cl
movb 0x1234(di), cl
movb 0x1234(bp), cl
movb 0x1234(bx), cl
movb fs:(bx,si), cl
movb fs:(bx,di), cl
movb fs:(bp,si), cl
movb fs:(bp,di), cl
movb fs:(si), cl
movb fs:(di), cl
movb fs:0xedcc, cl
movb fs:0x1234, cl
movb fs:(bx), cl
movb fs:-0x12(bx,si), cl
movb fs:-0x12(bx,di), cl
movb fs:-0x12(bp,si), cl
movb fs:-0x12(bp,di), cl
movb fs:-0x12(si), cl
movb fs:-0x12(di), cl
movb fs:-0x12(bp), cl
movb fs:-0x12(bx), cl
movb fs:0x12(bx,si), cl
movb fs:0x12(bx,di), cl
movb fs:0x12(bp,si), cl
movb fs:0x12(bp,di), cl
movb fs:0x12(si), cl
movb fs:0x12(di), cl
movb fs:0x12(bp), cl
movb fs:0x12(bx), cl
movb fs:-0x1234(bx,si), cl
movb fs:-0x1234(bx,di), cl
movb fs:-0x1234(bp,si), cl
movb fs:-0x1234(bp,di), cl
movb fs:-0x1234(si), cl
movb fs:-0x1234(di), cl
movb fs:-0x1234(bp), cl
movb fs:-0x1234(bx), cl
movb fs:0x1234(bx,si), cl
movb fs:0x1234(bx,di), cl
movb fs:0x1234(bp,si), cl
movb fs:0x1234(bp,di), cl
movb fs:0x1234(si), cl
movb fs:0x1234(di), cl
movb fs:0x1234(bp), cl
movb fs:0x1234(bx), cl
arplw si, dx
arplw bx, (bx,si)
vmrun
addr32 vmrun
vmload
addr32 vmload
vmsave
addr32 vmsave
invlpga
addr32 invlpga
monitorx
addr32 monitorx
clzero
addr32 clzero
pvalidate
addr32 pvalidate
serialize
xsusldtrk
xresldtrk
