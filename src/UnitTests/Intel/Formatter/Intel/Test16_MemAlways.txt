# SPDX-License-Identifier: MIT
# Copyright (C) 2018-present iced project and contributors

push es
data32 push es
pop es
data32 pop es
push cs
data32 push cs
push ss
data32 push ss
pop ss
data32 pop ss
push ds
data32 push ds
pop ds
data32 pop ds
pusha
pushad
popa
popad
data32 push 0x3412a55a
data32 push -0x5b
jo short 0x804c
data32 jo short 0x0000804d
jno short 0x804c
data32 jno short 0x0000804d
jb short 0x804c
data32 jb short 0x0000804d
jae short 0x804c
data32 jae short 0x0000804d
je short 0x804c
data32 je short 0x0000804d
jne short 0x804c
data32 jne short 0x0000804d
jbe short 0x804c
data32 jbe short 0x0000804d
ja short 0x804c
data32 ja short 0x0000804d
js short 0x804c
data32 js short 0x0000804d
jns short 0x804c
data32 jns short 0x0000804d
jp short 0x804c
data32 jp short 0x0000804d
jnp short 0x804c
data32 jnp short 0x0000804d
jl short 0x804c
data32 jl short 0x0000804d
jge short 0x804c
data32 jge short 0x0000804d
jle short 0x804c
data32 jle short 0x0000804d
jg short 0x804c
data32 jg short 0x0000804d
pop esi
pop dword ptr [bx+si]
call far 0x3412, 0x7856
data32 call far 0x78563412, 0xbc9a
pushfd
popfd
ret -0x5aa6
data32 ret -0x5aa6
ret
data32 ret
les bx, dword ptr [bx+si]
les ebx, fword ptr [bx+si]
lds bx, dword ptr [bx+si]
lds ebx, fword ptr [bx+si]
data32 enter -0x5aa6, -0x5a
data32 leave
loopne 0x804c
data32 loopne 0x0000804d
addr32 loopne 0x804d
data32 addr32 loopne 0x0000804e
loope 0x804c
data32 loope 0x0000804d
addr32 loope 0x804d
data32 addr32 loope 0x0000804e
loop 0x804c
data32 loop 0x0000804d
addr32 loop 0x804d
data32 addr32 loop 0x0000804e
jcxz 0x804c
data32 jcxz 0x0000804d
jecxz 0x804d
data32 jecxz 0x0000804e
call 0x254d
data32 call 0xa55ab408
jmp 0x254d
data32 jmp 0xa55ab408
jmp far 0x3412, 0x7856
data32 jmp far 0x78563412, 0xbcea
jmp short 0x804c
data32 jmp short 0x0000804d
call cx
call word ptr [bx+si]
call ecx
call dword ptr [bx+si]
jmp dx
jmp word ptr [bx+si]
jmp edx
jmp dword ptr [bx+si]
push esi
push dword ptr [bx+si]
bndmov bnd1, bnd2
bndmov bnd1, qword ptr [eax]
bndcl bnd1, edx
bndcl bnd1, [eax]
bndcu bnd1, edx
bndcu bnd1, [eax]
bndmov bnd2, bnd1
bndmov qword ptr [eax], bnd1
bndmk bnd1, [eax]
bndcn bnd1, edx
bndcn bnd1, [eax]
vmread esi, ecx
vmread dword ptr [bx+si], ebx
vmwrite ecx, esi
vmwrite ebx, dword ptr [bx+si]
jo 0x254e
data32 jo 0x34132551
jno 0x254e
data32 jno 0x34132551
jb 0x254e
data32 jb 0x34132551
jae 0x254e
data32 jae 0x34132551
je 0x254e
data32 je 0x34132551
jne 0x254e
data32 jne 0x34132551
jbe 0x254e
data32 jbe 0x34132551
ja 0x254e
data32 ja 0x34132551
js 0x254e
data32 js 0x34132551
jns 0x254e
data32 jns 0x34132551
jp 0x254e
data32 jp 0x34132551
jnp 0x254e
data32 jnp 0x34132551
jl 0x254e
data32 jl 0x34132551
jge 0x254e
data32 jge 0x34132551
jle 0x254e
data32 jle 0x34132551
jg 0x254e
data32 jg 0x34132551
data32 push fs
data32 pop fs
data32 push gs
data32 pop gs
invept edx, xmmword ptr [bx+si]
invvpid edx, xmmword ptr [bx+si]
invpcid edx, xmmword ptr [bx+si]
push -0x5aa6
push -0x5b
insb byte ptr [edi], dx
insb byte ptr [di], dx
insw word ptr [edi], dx
insw word ptr [di], dx
insd dword ptr [edi], dx
insd dword ptr [di], dx
outsb dx, byte ptr [esi]
outsb dx, byte ptr [si]
outsw dx, word ptr [esi]
outsw dx, word ptr [si]
outsd dx, dword ptr [esi]
outsd dx, dword ptr [si]
mov fs, si
mov ds, word ptr [bx+si]
mov fs, si
mov ds, word ptr [bx+si]
pop si
pop word ptr [bx+si]
nop
xchg eax, eax
pushf
popf
mov al, byte ptr [0xf0de]
addr32 mov al, byte ptr [0x78563412]
mov ax, word ptr [0xf0de]
addr32 mov ax, word ptr [0x78563412]
mov eax, dword ptr [0xf0de]
addr32 mov eax, dword ptr [0x78563412]
mov byte ptr [0xf0de], al
addr32 mov byte ptr [0x78563412], al
mov word ptr [0xf0de], ax
addr32 mov word ptr [0x78563412], ax
mov dword ptr [0xf0de], eax
addr32 mov dword ptr [0x78563412], eax
movsb byte ptr [edi], byte ptr [esi]
movsb byte ptr [di], byte ptr [si]
movsw word ptr [edi], word ptr [esi]
movsw word ptr [di], word ptr [si]
movsd dword ptr [edi], dword ptr [esi]
movsd dword ptr [di], dword ptr [si]
cmpsb byte ptr [esi], byte ptr [edi]
cmpsb byte ptr [si], byte ptr [di]
cmpsw word ptr [esi], word ptr [edi]
cmpsw word ptr [si], word ptr [di]
cmpsd dword ptr [esi], dword ptr [edi]
cmpsd dword ptr [si], dword ptr [di]
stosb byte ptr [edi]
stosb byte ptr [di]
stosw word ptr [edi]
stosw word ptr [di]
stosd dword ptr [edi]
stosd dword ptr [di]
lodsb byte ptr [esi]
lodsb byte ptr [si]
lodsw word ptr [esi]
lodsw word ptr [si]
lodsd dword ptr [esi]
lodsd dword ptr [si]
scasb byte ptr [edi]
scasb byte ptr [di]
scasw word ptr [edi]
scasw word ptr [di]
scasd dword ptr [edi]
scasd dword ptr [di]
xbegin 0x0000254e
xbegin 0x34132551
enter -0x5aa6, -0x5a
leave
ret far -0x5aa6
data32 ret far -0x5aa6
ret far
data32 ret far
iret
iretd
rol cl, cl
rol byte ptr [bx+si], cl
ror dl, cl
ror byte ptr [bx+si], cl
rcl bl, cl
rcl byte ptr [bx+si], cl
rcr ah, cl
rcr byte ptr [bx+si], cl
shl ch, cl
shl byte ptr [bx+si], cl
shr dh, cl
shr byte ptr [bx+si], cl
sar al, cl
sar byte ptr [bx+si], cl
rol cx, cl
rol word ptr [bx+si], cl
rol ecx, cl
rol dword ptr [bx+si], cl
ror dx, cl
ror word ptr [bx+si], cl
ror edx, cl
ror dword ptr [bx+si], cl
rcl bx, cl
rcl word ptr [bx+si], cl
rcl ebx, cl
rcl dword ptr [bx+si], cl
rcr sp, cl
rcr word ptr [bx+si], cl
rcr esp, cl
rcr dword ptr [bx+si], cl
shl bp, cl
shl word ptr [bx+si], cl
shl ebp, cl
shl dword ptr [bx+si], cl
shr si, cl
shr word ptr [bx+si], cl
shr esi, cl
shr dword ptr [bx+si], cl
sar ax, cl
sar word ptr [bx+si], cl
sar eax, cl
sar dword ptr [bx+si], cl
fldcw word ptr [bx+si]
fnstcw word ptr [bx+si]
fnstsw word ptr [bx+si]
call far dword ptr [bx+si]
call far fword ptr [bx+si]
jmp far dword ptr [bx+si]
jmp far fword ptr [bx+si]
push si
push word ptr [bx+si]
sgdt fword ptr [bx+si]
sgdt fword ptr [bx+si]
sidt fword ptr [bx+si]
sidt fword ptr [bx+si]
lgdt fword ptr [bx+si]
lgdt fword ptr [bx+si]
lidt fword ptr [bx+si]
lidt fword ptr [bx+si]
lar cx, si
lar bx, word ptr [bx+si]
lar ecx, esi
lar ebx, word ptr [bx+si]
lsl cx, si
lsl bx, word ptr [bx+si]
lsl ecx, esi
lsl ebx, word ptr [bx+si]
bndldx bnd1, [eax]
bndstx [eax], bnd1
kmovw k2, k3
kmovw k1, word ptr [bx+si]
kmovb k2, k3
kmovb k1, byte ptr [bx+si]
kmovd k2, k3
kmovd k1, dword ptr [bx+si]
kmovw word ptr [bx+si], k1
kmovb byte ptr [bx+si], k1
kmovd dword ptr [bx+si], k1
kmovw k2, ebx
kmovb k2, ebx
kmovd k2, ebx
kmovw edx, k3
kmovb edx, k3
kmovd edx, k3
kortestw k2, k3
kortestq k2, k3
kortestb k2, k3
kortestd k2, k3
ktestw k2, k3
ktestq k2, k3
ktestb k2, k3
ktestd k2, k3
push fs
pop fs
shld si, cx, cl
shld word ptr [bx+si], bx, cl
shld esi, ecx, cl
shld dword ptr [bx+si], ebx, cl
push gs
pop gs
shrd si, cx, cl
shrd word ptr [bx+si], bx, cl
shrd esi, ecx, cl
shrd dword ptr [bx+si], ebx, cl
lss bx, dword ptr [bx+si]
lss ebx, fword ptr [bx+si]
lfs bx, dword ptr [bx+si]
lfs ebx, fword ptr [bx+si]
lgs bx, dword ptr [bx+si]
lgs ebx, fword ptr [bx+si]
movzx cx, dh
movzx bx, byte ptr [bx+si]
movzx ecx, dh
movzx ebx, byte ptr [bx+si]
movzx cx, si
movzx bx, word ptr [bx+si]
movzx ecx, si
movzx ebx, word ptr [bx+si]
movsx cx, dh
movsx bx, byte ptr [bx+si]
movsx ecx, dh
movsx ebx, byte ptr [bx+si]
movsx cx, si
movsx bx, word ptr [bx+si]
movsx ecx, si
movsx ebx, word ptr [bx+si]
cmpxchg8b qword ptr [bx+si]
crc32 ecx, dh
crc32 ebx, byte ptr [bx+si]
crc32 ecx, si
crc32 ebx, word ptr [bx+si]
crc32 ecx, esi
crc32 ebx, dword ptr [bx+si]
addr32 maskmovq mm2, mm3
maskmovq mm2, mm3
addr32 maskmovdqu xmm2, xmm3
maskmovdqu xmm2, xmm3
addr32 vmaskmovdqu xmm2, xmm3
vmaskmovdqu xmm2, xmm3
outsb dx, byte ptr fs:[si]
outsw dx, word ptr fs:[si]
outsd dx, dword ptr fs:[si]
movsb byte ptr es:[di], byte ptr fs:[si]
movsw word ptr es:[di], word ptr fs:[si]
movsd dword ptr es:[di], dword ptr fs:[si]
cmpsb byte ptr fs:[si], byte ptr es:[di]
cmpsw word ptr fs:[si], word ptr es:[di]
cmpsd dword ptr fs:[si], dword ptr es:[di]
lodsb byte ptr fs:[si]
lodsw word ptr fs:[si]
lodsd dword ptr fs:[si]
xlat byte ptr [ebx]
xlat byte ptr fs:[bx]
maskmovq mm2, mm3, fs
maskmovdqu xmm2, xmm3, fs
vmaskmovdqu xmm2, xmm3, fs
xlat byte ptr [bx]
aam 0xa
aad 0xa
aam -6
aad -6
fldenv [bx+si]
fldenv fpuenv28 ptr [bx+si]
fnstenv [bx+si]
fnstenv fpuenv28 ptr [bx+si]
frstor [bx+si]
frstor fpustate108 ptr [bx+si]
fnsave [bx+si]
fnsave fpustate108 ptr [bx+si]
monitor
addr32 monitor
mwait
mov al, byte ptr fs:[0xf0de]
addr32 mov al, byte ptr fs:[0x78563412]
mov ax, word ptr fs:[0xf0de]
addr32 mov ax, word ptr fs:[0x78563412]
mov eax, dword ptr fs:[0xf0de]
addr32 mov eax, dword ptr fs:[0x78563412]
mov byte ptr fs:[0xf0de], al
addr32 mov byte ptr fs:[0x78563412], al
mov word ptr fs:[0xf0de], ax
addr32 mov word ptr fs:[0x78563412], ax
mov dword ptr fs:[0xf0de], eax
addr32 mov dword ptr fs:[0x78563412], eax
mov cl, byte ptr [bx+si]
mov cl, byte ptr [bx+di]
mov cl, byte ptr [bp+si]
mov cl, byte ptr [bp+di]
mov cl, byte ptr [si]
mov cl, byte ptr [di]
mov cl, byte ptr [0xedcc]
mov cl, byte ptr [0x1234]
mov cl, byte ptr [bx]
mov cl, byte ptr [bx+si-0x12]
mov cl, byte ptr [bx+di-0x12]
mov cl, byte ptr [bp+si-0x12]
mov cl, byte ptr [bp+di-0x12]
mov cl, byte ptr [si-0x12]
mov cl, byte ptr [di-0x12]
mov cl, byte ptr [bp-0x12]
mov cl, byte ptr [bx-0x12]
mov cl, byte ptr [bx+si+0x12]
mov cl, byte ptr [bx+di+0x12]
mov cl, byte ptr [bp+si+0x12]
mov cl, byte ptr [bp+di+0x12]
mov cl, byte ptr [si+0x12]
mov cl, byte ptr [di+0x12]
mov cl, byte ptr [bp+0x12]
mov cl, byte ptr [bx+0x12]
mov cl, byte ptr [bx+si-0x1234]
mov cl, byte ptr [bx+di-0x1234]
mov cl, byte ptr [bp+si-0x1234]
mov cl, byte ptr [bp+di-0x1234]
mov cl, byte ptr [si-0x1234]
mov cl, byte ptr [di-0x1234]
mov cl, byte ptr [bp-0x1234]
mov cl, byte ptr [bx-0x1234]
mov cl, byte ptr [bx+si+0x1234]
mov cl, byte ptr [bx+di+0x1234]
mov cl, byte ptr [bp+si+0x1234]
mov cl, byte ptr [bp+di+0x1234]
mov cl, byte ptr [si+0x1234]
mov cl, byte ptr [di+0x1234]
mov cl, byte ptr [bp+0x1234]
mov cl, byte ptr [bx+0x1234]
mov cl, byte ptr fs:[bx+si]
mov cl, byte ptr fs:[bx+di]
mov cl, byte ptr fs:[bp+si]
mov cl, byte ptr fs:[bp+di]
mov cl, byte ptr fs:[si]
mov cl, byte ptr fs:[di]
mov cl, byte ptr fs:[0xedcc]
mov cl, byte ptr fs:[0x1234]
mov cl, byte ptr fs:[bx]
mov cl, byte ptr fs:[bx+si-0x12]
mov cl, byte ptr fs:[bx+di-0x12]
mov cl, byte ptr fs:[bp+si-0x12]
mov cl, byte ptr fs:[bp+di-0x12]
mov cl, byte ptr fs:[si-0x12]
mov cl, byte ptr fs:[di-0x12]
mov cl, byte ptr fs:[bp-0x12]
mov cl, byte ptr fs:[bx-0x12]
mov cl, byte ptr fs:[bx+si+0x12]
mov cl, byte ptr fs:[bx+di+0x12]
mov cl, byte ptr fs:[bp+si+0x12]
mov cl, byte ptr fs:[bp+di+0x12]
mov cl, byte ptr fs:[si+0x12]
mov cl, byte ptr fs:[di+0x12]
mov cl, byte ptr fs:[bp+0x12]
mov cl, byte ptr fs:[bx+0x12]
mov cl, byte ptr fs:[bx+si-0x1234]
mov cl, byte ptr fs:[bx+di-0x1234]
mov cl, byte ptr fs:[bp+si-0x1234]
mov cl, byte ptr fs:[bp+di-0x1234]
mov cl, byte ptr fs:[si-0x1234]
mov cl, byte ptr fs:[di-0x1234]
mov cl, byte ptr fs:[bp-0x1234]
mov cl, byte ptr fs:[bx-0x1234]
mov cl, byte ptr fs:[bx+si+0x1234]
mov cl, byte ptr fs:[bx+di+0x1234]
mov cl, byte ptr fs:[bp+si+0x1234]
mov cl, byte ptr fs:[bp+di+0x1234]
mov cl, byte ptr fs:[si+0x1234]
mov cl, byte ptr fs:[di+0x1234]
mov cl, byte ptr fs:[bp+0x1234]
mov cl, byte ptr fs:[bx+0x1234]
arpl dx, si
arpl word ptr [bx+si], bx
vmrun ax
vmrun eax
vmload ax
vmload eax
vmsave ax
vmsave eax
invlpga ax, ecx
invlpga eax, ecx
monitorx
addr32 monitorx
clzero ax
clzero eax
pvalidate ax
pvalidate eax
serialize
xsusldtrk
xresldtrk
