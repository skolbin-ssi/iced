# SPDX-License-Identifier: MIT
# Copyright (C) 2018-present iced project and contributors

push es
pushd es
pop es
popd es
push cs
pushd cs
push ss
pushd ss
pop ss
popd ss
push ds
pushd ds
pop ds
popd ds
pusha
pushad
popa
popad
pushd 3412A55Ah
pushd 0FFFFFFA5h
jo 804Ch
jo 0000804Dh
jno 804Ch
jno 0000804Dh
jb 804Ch
jb 0000804Dh
jae 804Ch
jae 0000804Dh
je 804Ch
je 0000804Dh
jne 804Ch
jne 0000804Dh
jbe 804Ch
jbe 0000804Dh
ja 804Ch
ja 0000804Dh
js 804Ch
js 0000804Dh
jns 804Ch
jns 0000804Dh
jp 804Ch
jp 0000804Dh
jnp 804Ch
jnp 0000804Dh
jl 804Ch
jl 0000804Dh
jge 804Ch
jge 0000804Dh
jle 804Ch
jle 0000804Dh
jg 804Ch
jg 0000804Dh
pop esi
pop dword ptr [bx+si]
call 7856h:3412h
call 0BC9Ah:78563412h
pushfd
popfd
ret 0A55Ah
retnd 0A55Ah
ret
retnd
les bx,[bx+si]
les ebx,[bx+si]
lds bx,[bx+si]
lds ebx,[bx+si]
enterd 0A55Ah,0A6h
leaved
loopne 804Ch
loopne 0000804Dh
loopned 804Dh
loopned 0000804Eh
loope 804Ch
loope 0000804Dh
looped 804Dh
looped 0000804Eh
loop 804Ch
loop 0000804Dh
loopd 804Dh
loopd 0000804Eh
jcxz 804Ch
jcxz 0000804Dh
jecxz 804Dh
jecxz 0000804Eh
call 254Dh
call 0A55AB408h
jmp 254Dh
jmp 0A55AB408h
jmp 7856h:3412h
jmp 0BCEAh:78563412h
jmp 804Ch
jmp 0000804Dh
call cx
call word ptr [bx+si]
call ecx
call dword ptr [bx+si]
jmp dx
jmp word ptr [bx+si]
jmp edx
jmp dword ptr [bx+si]
push esi
push dword ptr [bx+si]
bndmov bnd1,bnd2
bndmov bnd1,qword ptr [eax]
bndcl bnd1,edx
bndcl bnd1,[eax]
bndcu bnd1,edx
bndcu bnd1,[eax]
bndmov bnd2,bnd1
bndmov qword ptr [eax],bnd1
bndmk bnd1,dword ptr [eax]
bndcn bnd1,edx
bndcn bnd1,[eax]
vmread esi,ecx
vmread dword ptr [bx+si],ebx
vmwrite ecx,esi
vmwrite ebx,dword ptr [bx+si]
jo 254Eh
jo 34132551h
jno 254Eh
jno 34132551h
jb 254Eh
jb 34132551h
jae 254Eh
jae 34132551h
je 254Eh
je 34132551h
jne 254Eh
jne 34132551h
jbe 254Eh
jbe 34132551h
ja 254Eh
ja 34132551h
js 254Eh
js 34132551h
jns 254Eh
jns 34132551h
jp 254Eh
jp 34132551h
jnp 254Eh
jnp 34132551h
jl 254Eh
jl 34132551h
jge 254Eh
jge 34132551h
jle 254Eh
jle 34132551h
jg 254Eh
jg 34132551h
pushd fs
popd fs
pushd gs
popd gs
invept edx,oword ptr [bx+si]
invvpid edx,oword ptr [bx+si]
invpcid edx,oword ptr [bx+si]
push 0A55Ah
push 0FFA5h
ins byte ptr [edi],dx
insb
ins word ptr [edi],dx
insw
ins dword ptr [edi],dx
insd
outs dx,byte ptr [esi]
outsb
outs dx,word ptr [esi]
outsw
outs dx,dword ptr [esi]
outsd
mov fs,si
mov ds,[bx+si]
mov fs,esi
mov ds,[bx+si]
pop si
pop word ptr [bx+si]
nop
xchg eax,eax
pushf
popf
mov al,ds:[0F0DEh]
mov al,ds:[78563412h]
mov ax,ds:[0F0DEh]
mov ax,ds:[78563412h]
mov eax,ds:[0F0DEh]
mov eax,ds:[78563412h]
mov ds:[0F0DEh],al
mov ds:[78563412h],al
mov ds:[0F0DEh],ax
mov ds:[78563412h],ax
mov ds:[0F0DEh],eax
mov ds:[78563412h],eax
movs byte ptr [edi],byte ptr [esi]
movsb
movs word ptr [edi],word ptr [esi]
movsw
movs dword ptr [edi],dword ptr [esi]
movsd
cmps byte ptr [esi],byte ptr [edi]
cmpsb
cmps word ptr [esi],word ptr [edi]
cmpsw
cmps dword ptr [esi],dword ptr [edi]
cmpsd
stos byte ptr [edi]
stosb
stos word ptr [edi]
stosw
stos dword ptr [edi]
stosd
lods byte ptr [esi]
lodsb
lods word ptr [esi]
lodsw
lods dword ptr [esi]
lodsd
scas byte ptr [edi]
scasb
scas word ptr [edi]
scasw
scas dword ptr [edi]
scasd
xbegin 0000254Eh
xbegin 34132551h
enter 0A55Ah,0A6h
leave
retf 0A55Ah
retfd 0A55Ah
retf
retfd
iret
iretd
rol cl,cl
rol byte ptr [bx+si],cl
ror dl,cl
ror byte ptr [bx+si],cl
rcl bl,cl
rcl byte ptr [bx+si],cl
rcr ah,cl
rcr byte ptr [bx+si],cl
shl ch,cl
shl byte ptr [bx+si],cl
shr dh,cl
shr byte ptr [bx+si],cl
sar al,cl
sar byte ptr [bx+si],cl
rol cx,cl
rol word ptr [bx+si],cl
rol ecx,cl
rol dword ptr [bx+si],cl
ror dx,cl
ror word ptr [bx+si],cl
ror edx,cl
ror dword ptr [bx+si],cl
rcl bx,cl
rcl word ptr [bx+si],cl
rcl ebx,cl
rcl dword ptr [bx+si],cl
rcr sp,cl
rcr word ptr [bx+si],cl
rcr esp,cl
rcr dword ptr [bx+si],cl
shl bp,cl
shl word ptr [bx+si],cl
shl ebp,cl
shl dword ptr [bx+si],cl
shr si,cl
shr word ptr [bx+si],cl
shr esi,cl
shr dword ptr [bx+si],cl
sar ax,cl
sar word ptr [bx+si],cl
sar eax,cl
sar dword ptr [bx+si],cl
fldcw [bx+si]
fnstcw [bx+si]
fnstsw [bx+si]
call dword ptr [bx+si]
call fword ptr [bx+si]
jmp dword ptr [bx+si]
jmp fword ptr [bx+si]
push si
push word ptr [bx+si]
sgdt [bx+si]
sgdtd [bx+si]
sidt [bx+si]
sidtd [bx+si]
lgdt fword ptr [bx+si]
lgdtd fword ptr [bx+si]
lidt fword ptr [bx+si]
lidtd fword ptr [bx+si]
lar cx,si
lar bx,word ptr [bx+si]
lar ecx,esi
lar ebx,word ptr [bx+si]
lsl cx,si
lsl bx,word ptr [bx+si]
lsl ecx,esi
lsl ebx,word ptr [bx+si]
bndldx bnd1,dword ptr [eax]
bndstx dword ptr [eax],bnd1
kmovw k2,k3
kmovw k1,word ptr [bx+si]
kmovb k2,k3
kmovb k1,byte ptr [bx+si]
kmovd k2,k3
kmovd k1,dword ptr [bx+si]
kmovw word ptr [bx+si],k1
kmovb byte ptr [bx+si],k1
kmovd dword ptr [bx+si],k1
kmovw k2,ebx
kmovb k2,ebx
kmovd k2,ebx
kmovw edx,k3
kmovb edx,k3
kmovd edx,k3
kortestw k2,k3
kortestq k2,k3
kortestb k2,k3
kortestd k2,k3
ktestw k2,k3
ktestq k2,k3
ktestb k2,k3
ktestd k2,k3
push fs
pop fs
shld si,cx,cl
shld [bx+si],bx,cl
shld esi,ecx,cl
shld [bx+si],ebx,cl
push gs
pop gs
shrd si,cx,cl
shrd [bx+si],bx,cl
shrd esi,ecx,cl
shrd [bx+si],ebx,cl
lss bx,[bx+si]
lss ebx,[bx+si]
lfs bx,[bx+si]
lfs ebx,[bx+si]
lgs bx,[bx+si]
lgs ebx,[bx+si]
movzx cx,dh
movzx bx,byte ptr [bx+si]
movzx ecx,dh
movzx ebx,byte ptr [bx+si]
movzx cx,si
movzx bx,word ptr [bx+si]
movzx ecx,si
movzx ebx,word ptr [bx+si]
movsx cx,dh
movsx bx,byte ptr [bx+si]
movsx ecx,dh
movsx ebx,byte ptr [bx+si]
movsx cx,si
movsx bx,word ptr [bx+si]
movsx ecx,si
movsx ebx,word ptr [bx+si]
cmpxchg8b qword ptr [bx+si]
crc32 ecx,dh
crc32 ebx,byte ptr [bx+si]
crc32 ecx,si
crc32 ebx,word ptr [bx+si]
crc32 ecx,esi
crc32 ebx,dword ptr [bx+si]
maskmovq [edi],mm2,mm3
maskmovq mm2,mm3
maskmovdqu [edi],xmm2,xmm3
maskmovdqu xmm2,xmm3
vmaskmovdqu [edi],xmm2,xmm3
vmaskmovdqu xmm2,xmm3
outs dx,byte ptr fs:[si]
outs dx,word ptr fs:[si]
outs dx,dword ptr fs:[si]
movs byte ptr es:[di],byte ptr fs:[si]
movs word ptr es:[di],word ptr fs:[si]
movs dword ptr es:[di],dword ptr fs:[si]
cmps byte ptr fs:[si],byte ptr es:[di]
cmps word ptr fs:[si],word ptr es:[di]
cmps dword ptr fs:[si],dword ptr es:[di]
lods byte ptr fs:[si]
lods word ptr fs:[si]
lods dword ptr fs:[si]
xlat byte ptr [ebx]
xlat byte ptr fs:[bx]
maskmovq fs:[di],mm2,mm3
maskmovdqu fs:[di],xmm2,xmm3
vmaskmovdqu fs:[di],xmm2,xmm3
xlatb
aam
aad
aam 0FAh
aad 0FAh
fldenv [bx+si]
fldenv fpuenv28 ptr [bx+si]
fnstenv [bx+si]
fnstenv fpuenv28 ptr [bx+si]
frstor [bx+si]
frstor fpustate108 ptr [bx+si]
fnsave [bx+si]
fnsave fpustate108 ptr [bx+si]
monitor ax,ecx,edx
monitor eax,ecx,edx
mwait ax,ecx
mov al,fs:[0F0DEh]
mov al,fs:[78563412h]
mov ax,fs:[0F0DEh]
mov ax,fs:[78563412h]
mov eax,fs:[0F0DEh]
mov eax,fs:[78563412h]
mov fs:[0F0DEh],al
mov fs:[78563412h],al
mov fs:[0F0DEh],ax
mov fs:[78563412h],ax
mov fs:[0F0DEh],eax
mov fs:[78563412h],eax
mov cl,[bx+si]
mov cl,[bx+di]
mov cl,[bp+si]
mov cl,[bp+di]
mov cl,[si]
mov cl,[di]
mov cl,ds:[0EDCCh]
mov cl,ds:[1234h]
mov cl,[bx]
mov cl,[bx+si-12h]
mov cl,[bx+di-12h]
mov cl,[bp+si-12h]
mov cl,[bp+di-12h]
mov cl,[si-12h]
mov cl,[di-12h]
mov cl,[bp-12h]
mov cl,[bx-12h]
mov cl,[bx+si+12h]
mov cl,[bx+di+12h]
mov cl,[bp+si+12h]
mov cl,[bp+di+12h]
mov cl,[si+12h]
mov cl,[di+12h]
mov cl,[bp+12h]
mov cl,[bx+12h]
mov cl,[bx+si-1234h]
mov cl,[bx+di-1234h]
mov cl,[bp+si-1234h]
mov cl,[bp+di-1234h]
mov cl,[si-1234h]
mov cl,[di-1234h]
mov cl,[bp-1234h]
mov cl,[bx-1234h]
mov cl,[bx+si+1234h]
mov cl,[bx+di+1234h]
mov cl,[bp+si+1234h]
mov cl,[bp+di+1234h]
mov cl,[si+1234h]
mov cl,[di+1234h]
mov cl,[bp+1234h]
mov cl,[bx+1234h]
mov cl,fs:[bx+si]
mov cl,fs:[bx+di]
mov cl,fs:[bp+si]
mov cl,fs:[bp+di]
mov cl,fs:[si]
mov cl,fs:[di]
mov cl,fs:[0EDCCh]
mov cl,fs:[1234h]
mov cl,fs:[bx]
mov cl,fs:[bx+si-12h]
mov cl,fs:[bx+di-12h]
mov cl,fs:[bp+si-12h]
mov cl,fs:[bp+di-12h]
mov cl,fs:[si-12h]
mov cl,fs:[di-12h]
mov cl,fs:[bp-12h]
mov cl,fs:[bx-12h]
mov cl,fs:[bx+si+12h]
mov cl,fs:[bx+di+12h]
mov cl,fs:[bp+si+12h]
mov cl,fs:[bp+di+12h]
mov cl,fs:[si+12h]
mov cl,fs:[di+12h]
mov cl,fs:[bp+12h]
mov cl,fs:[bx+12h]
mov cl,fs:[bx+si-1234h]
mov cl,fs:[bx+di-1234h]
mov cl,fs:[bp+si-1234h]
mov cl,fs:[bp+di-1234h]
mov cl,fs:[si-1234h]
mov cl,fs:[di-1234h]
mov cl,fs:[bp-1234h]
mov cl,fs:[bx-1234h]
mov cl,fs:[bx+si+1234h]
mov cl,fs:[bx+di+1234h]
mov cl,fs:[bp+si+1234h]
mov cl,fs:[bp+di+1234h]
mov cl,fs:[si+1234h]
mov cl,fs:[di+1234h]
mov cl,fs:[bp+1234h]
mov cl,fs:[bx+1234h]
arpl dx,si
arpl [bx+si],bx
vmrun ax
vmrun eax
vmload ax
vmload eax
vmsave ax
vmsave eax
invlpga ax,ecx
invlpga eax,ecx
monitorx ax,ecx,edx
monitorx eax,ecx,edx
clzero
clzero
pvalidate
pvalidate
serialize
xsusldtrk
xresldtrk
