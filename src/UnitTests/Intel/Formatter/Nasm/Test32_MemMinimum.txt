# SPDX-License-Identifier: MIT
# Copyright (C) 2018-present iced project and contributors

o16 push es
push es
o16 pop es
pop es
o16 push cs
push cs
o16 push ss
push ss
o16 pop ss
pop ss
o16 push ds
push ds
o16 pop ds
pop ds
daa
das
aaa
aas
inc ax
inc eax
inc cx
inc ecx
inc dx
inc edx
inc bx
inc ebx
inc sp
inc esp
inc bp
inc ebp
inc si
inc esi
inc di
inc edi
dec ax
dec eax
dec cx
dec ecx
dec dx
dec edx
dec bx
dec ebx
dec sp
dec esp
dec bp
dec ebp
dec si
dec esi
dec di
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
pop ebx
pop esp
pop ebp
pop esi
pop edi
pushaw
pusha
popaw
popa
bound bx, [eax]
bound ebx, [eax]
arpl dx, si
arpl [eax], bx
push dword 0x3412a55a
push byte -0x5b
o16 jo short 0x004d
jo short 0x8000004c
o16 jno short 0x004d
jno short 0x8000004c
o16 jb short 0x004d
jb short 0x8000004c
o16 jae short 0x004d
jae short 0x8000004c
o16 je short 0x004d
je short 0x8000004c
o16 jne short 0x004d
jne short 0x8000004c
o16 jbe short 0x004d
jbe short 0x8000004c
o16 ja short 0x004d
ja short 0x8000004c
o16 js short 0x004d
js short 0x8000004c
o16 jns short 0x004d
jns short 0x8000004c
o16 jp short 0x004d
jp short 0x8000004c
o16 jnp short 0x004d
jnp short 0x8000004c
o16 jl short 0x004d
jl short 0x8000004c
o16 jge short 0x004d
jge short 0x8000004c
o16 jle short 0x004d
jle short 0x8000004c
o16 jg short 0x004d
jg short 0x8000004c
pop esi
pop dword [eax]
call word 0x7856:0x3412
call 0xbc9a:0x78563412
pushf
popf
retw -0x5aa6
ret -0x5aa6
retw
ret
rep retw
rep ret
les bx, [eax]
les ebx, [eax]
lds bx, [eax]
lds ebx, [eax]
enter -0x5aa6, -0x5a
leave
into
aam
aad
o16 loopne 0x004e, cx
loopne 0x8000004d, cx
o16 loopne 0x004d
loopne 0x8000004c
o16 loope 0x004e, cx
loope 0x8000004d, cx
o16 loope 0x004d
loope 0x8000004c
o16 loop 0x004e, cx
loop 0x8000004d, cx
o16 loop 0x004d
loop 0x8000004c
o16 jcxz 0x004e
jcxz 0x8000004d
o16 jecxz 0x004d
jecxz 0x8000004c
call word 0xa54e
call 0x255a3407
jmp word 0xa54e
jmp 0x255a3407
jmp word 0x7856:0x3412
jmp 0xbcea:0x78563412
o16 jmp short 0x004d
jmp short 0x8000004c
call cx
call word [eax]
call ecx
call dword [eax]
jmp dx
jmp word [eax]
jmp edx
jmp dword [eax]
push esi
push dword [eax]
bndmov bnd1, bnd2
bndmov bnd1, [eax]
bndcl bnd1, edx
bndcl bnd1, [eax]
bndcu bnd1, edx
bndcu bnd1, [eax]
bndmov bnd2, bnd1
bndmov [eax], bnd1
bndmk bnd1, [eax]
bndcn bnd1, edx
bndcn bnd1, [eax]
mov esi, cr3
mov esi, dr3
mov cr3, esi
mov dr3, esi
vmread esi, ecx
vmread [eax], ebx
vmwrite ecx, esi
vmwrite ebx, [eax]
jo near word 0xa54f
jo near 0xb412a550
jno near word 0xa54f
jno near 0xb412a550
jb near word 0xa54f
jb near 0xb412a550
jae near word 0xa54f
jae near 0xb412a550
je near word 0xa54f
je near 0xb412a550
jne near word 0xa54f
jne near 0xb412a550
jbe near word 0xa54f
jbe near 0xb412a550
ja near word 0xa54f
ja near 0xb412a550
js near word 0xa54f
js near 0xb412a550
jns near word 0xa54f
jns near 0xb412a550
jp near word 0xa54f
jp near 0xb412a550
jnp near word 0xa54f
jnp near 0xb412a550
jl near word 0xa54f
jl near 0xb412a550
jge near word 0xa54f
jge near 0xb412a550
jle near word 0xa54f
jle near 0xb412a550
jg near word 0xa54f
jg near 0xb412a550
push fs
pop fs
push gs
pop gs
rdpid edx
invept edx, [eax]
invvpid edx, [eax]
invpcid edx, [eax]
salc
push word -0x5aa6
o16 push byte -0x5b
a16 insb
insb
a16 insw
insw
a16 insd
insd
a16 outsb
outsb
a16 outsw
outsw
a16 outsd
outsd
mov fs, si
o16 mov ds, [eax]
mov fs, esi
mov ds, [eax]
pop si
pop word [eax]
xchg ax, ax
nop
pushfw
popfw
mov al, [0xf0debc9a]
mov al, [word 0xf0de]
mov ax, [0xf0debc9a]
mov ax, [word 0xf0de]
mov eax, [0xf0debc9a]
mov eax, [word 0xf0de]
mov [0xf0debc9a], al
mov [word 0xf0de], al
mov [0xf0debc9a], ax
mov [word 0xf0de], ax
mov [0xf0debc9a], eax
mov [word 0xf0de], eax
a16 movsb
movsb
a16 movsw
movsw
a16 movsd
movsd
a16 cmpsb
cmpsb
a16 cmpsw
cmpsw
a16 cmpsd
cmpsd
a16 stosb
stosb
a16 stosw
stosw
a16 stosd
stosd
a16 lodsb
lodsb
a16 lodsw
lodsw
a16 lodsd
lodsd
a16 scasb
scasb
a16 scasw
scasw
a16 scasd
scasd
xbegin 0x7fffa54f
xbegin 0xb412a550
o16 enter -0x5aa6, -0x5a
o16 leave
retfw -0x5aa6
retf -0x5aa6
retfw
retf
iretw
iret
rol cl, cl
rol byte [eax], cl
ror dl, cl
ror byte [eax], cl
rcl bl, cl
rcl byte [eax], cl
rcr ah, cl
rcr byte [eax], cl
shl ch, cl
shl byte [eax], cl
shr dh, cl
shr byte [eax], cl
sar al, cl
sar byte [eax], cl
rol cx, cl
rol word [eax], cl
rol ecx, cl
rol dword [eax], cl
ror dx, cl
ror word [eax], cl
ror edx, cl
ror dword [eax], cl
rcl bx, cl
rcl word [eax], cl
rcl ebx, cl
rcl dword [eax], cl
rcr sp, cl
rcr word [eax], cl
rcr esp, cl
rcr dword [eax], cl
shl bp, cl
shl word [eax], cl
shl ebp, cl
shl dword [eax], cl
shr si, cl
shr word [eax], cl
shr esi, cl
shr dword [eax], cl
sar ax, cl
sar word [eax], cl
sar eax, cl
sar dword [eax], cl
fldcw [eax]
fnstcw [eax]
fnstsw [eax]
call [eax]
call [eax]
jmp [eax]
jmp [eax]
push si
push word [eax]
o16 sgdt [eax]
sgdt [eax]
o16 sidt [eax]
sidt [eax]
o16 lgdt [eax]
lgdt [eax]
o16 lidt [eax]
lidt [eax]
lar cx, si
lar bx, [eax]
lar ecx, esi
lar ebx, [eax]
lsl cx, si
lsl bx, [eax]
lsl ecx, esi
lsl ebx, [eax]
bndldx bnd1, [eax]
bndstx [eax], bnd1
kmovw k2, k3
kmovw k1, [eax]
kmovb k2, k3
kmovb k1, [eax]
kmovd k2, k3
kmovd k1, [eax]
kmovw [eax], k1
kmovb [eax], k1
kmovd [eax], k1
kmovw k2, ebx
kmovb k2, ebx
kmovd k2, ebx
kmovw edx, k3
kmovb edx, k3
kmovd edx, k3
kortestw k2, k3
kortestq k2, k3
kortestb k2, k3
kortestd k2, k3
ktestw k2, k3
ktestq k2, k3
ktestb k2, k3
ktestd k2, k3
o16 push fs
o16 pop fs
shld si, cx, cl
shld [eax], bx, cl
shld esi, ecx, cl
shld [eax], ebx, cl
o16 push gs
o16 pop gs
shrd si, cx, cl
shrd [eax], bx, cl
shrd esi, ecx, cl
shrd [eax], ebx, cl
lss bx, [eax]
lss ebx, [eax]
lfs bx, [eax]
lfs ebx, [eax]
lgs bx, [eax]
lgs ebx, [eax]
movzx cx, dh
movzx bx, byte [eax]
movzx ecx, dh
movzx ebx, byte [eax]
movzx cx, si
movzx bx, word [eax]
movzx ecx, si
movzx ebx, word [eax]
movsx cx, dh
movsx bx, byte [eax]
movsx ecx, dh
movsx ebx, byte [eax]
movsx cx, si
movsx bx, word [eax]
movsx ecx, si
movsx ebx, word [eax]
cmpxchg8b [eax]
crc32 ecx, dh
crc32 ebx, byte [eax]
crc32 ecx, si
crc32 ebx, word [eax]
crc32 ecx, esi
crc32 ebx, dword [eax]
a16 maskmovq mm2, mm3
maskmovq mm2, mm3
a16 maskmovdqu xmm2, xmm3
maskmovdqu xmm2, xmm3
a16 vmaskmovdqu xmm2, xmm3
vmaskmovdqu xmm2, xmm3
fs outsb
fs outsw
fs outsd
fs movsb
fs movsw
fs movsd
fs cmpsb
fs cmpsw
fs cmpsd
fs lodsb
fs lodsw
fs lodsd
a16 xlatb
fs xlatb
fs maskmovq mm2, mm3
fs maskmovdqu xmm2, xmm3
fs vmaskmovdqu xmm2, xmm3
xlatb
aam -6
aad -6
o16 fldenv [eax]
fldenv [eax]
o16 fnstenv [eax]
fnstenv [eax]
o16 frstor [eax]
frstor [eax]
o16 fnsave [eax]
fnsave [eax]
a16 monitor
monitor
mwait
mov al, [fs:0xf0debc9a]
mov al, [word fs:0xf0de]
mov ax, [fs:0xf0debc9a]
mov ax, [word fs:0xf0de]
mov eax, [fs:0xf0debc9a]
mov eax, [word fs:0xf0de]
mov [fs:0xf0debc9a], al
mov [word fs:0xf0de], al
mov [fs:0xf0debc9a], ax
mov [word fs:0xf0de], ax
mov [fs:0xf0debc9a], eax
mov [word fs:0xf0de], eax
mov cl, [eax]
mov cl, [eax-0x12]
mov cl, [eax-0x12345678]
mov cl, [0xedcba988]
mov cl, [eax+0x12]
mov cl, [eax+0x12345678]
mov cl, [0x12345678]
mov cl, [eax+ecx]
mov cl, [eax+ecx*2]
mov cl, [eax+ecx*4]
mov cl, [eax+ecx*8]
mov cl, [eax+ecx-0x12]
mov cl, [eax+ecx*2-0x12]
mov cl, [eax+ecx*4-0x12]
mov cl, [eax+ecx*8-0x12]
mov cl, [eax+ecx+0x12]
mov cl, [eax+ecx*2+0x12]
mov cl, [eax+ecx*4+0x12]
mov cl, [eax+ecx*8+0x12]
mov cl, [eax+ecx-0x12345678]
mov cl, [eax+ecx*2-0x12345678]
mov cl, [eax+ecx*4-0x12345678]
mov cl, [eax+ecx*8-0x12345678]
mov cl, [eax+ecx+0x12345678]
mov cl, [eax+ecx*2+0x12345678]
mov cl, [eax+ecx*4+0x12345678]
mov cl, [eax+ecx*8+0x12345678]
mov cl, [ecx*1-0x12345678]
mov cl, [ebp+ecx*2-0x12]
mov cl, [ebp+ecx*4-0x12345678]
mov cl, [ecx*8-0x12345678]
mov cl, [ecx*1+0x12345678]
mov cl, [ebp+ecx*2+0x12]
mov cl, [ebp+ecx*4+0x12345678]
mov cl, [ecx*8+0x12345678]
mov cl, [fs:eax]
mov cl, [fs:eax-0x12]
mov cl, [fs:eax-0x12345678]
mov cl, [fs:0xedcba988]
mov cl, [fs:eax+0x12]
mov cl, [fs:eax+0x12345678]
mov cl, [fs:0x12345678]
mov cl, [fs:eax+ecx]
mov cl, [fs:eax+ecx*2]
mov cl, [fs:eax+ecx*4]
mov cl, [fs:eax+ecx*8]
mov cl, [fs:eax+ecx-0x12]
mov cl, [fs:eax+ecx*2-0x12]
mov cl, [fs:eax+ecx*4-0x12]
mov cl, [fs:eax+ecx*8-0x12]
mov cl, [fs:eax+ecx+0x12]
mov cl, [fs:eax+ecx*2+0x12]
mov cl, [fs:eax+ecx*4+0x12]
mov cl, [fs:eax+ecx*8+0x12]
mov cl, [fs:eax+ecx-0x12345678]
mov cl, [fs:eax+ecx*2-0x12345678]
mov cl, [fs:eax+ecx*4-0x12345678]
mov cl, [fs:eax+ecx*8-0x12345678]
mov cl, [fs:eax+ecx+0x12345678]
mov cl, [fs:eax+ecx*2+0x12345678]
mov cl, [fs:eax+ecx*4+0x12345678]
mov cl, [fs:eax+ecx*8+0x12345678]
mov cl, [fs:ecx*1-0x12345678]
mov cl, [fs:ebp+ecx*2-0x12]
mov cl, [fs:ebp+ecx*4-0x12345678]
mov cl, [fs:ecx*8-0x12345678]
mov cl, [fs:ecx*1+0x12345678]
mov cl, [fs:ebp+ecx*2+0x12]
mov cl, [fs:ebp+ecx*4+0x12345678]
mov cl, [fs:ecx*8+0x12345678]
a16 vmrun
vmrun
a16 vmload
vmload
a16 vmsave
vmsave
invlpga ax, ecx
invlpga eax, ecx
a16 monitorx
monitorx
a16 clzero
clzero
rdpru
add cl, 0x5a
add byte [eax], 0x5a
or dl, -0x5b
or byte [eax], -0x5b
adc bl, 0x5a
adc byte [eax], 0x5a
sbb ah, -0x5b
sbb byte [eax], -0x5b
and ch, 0x5a
and byte [eax], 0x5a
sub dh, -0x5b
sub byte [eax], -0x5b
xor bh, 0x5a
xor byte [eax], 0x5a
cmp al, -0x5b
cmp byte [eax], -0x5b
frstpm
fnstdw ax
fnstsg ax
jmpe cx
jmpe word [eax]
jmpe edx
jmpe dword [eax]
loadallreset286
loadall286
loadall
umov dh, cl
umov [eax], bl
umov si, cx
umov [eax], bx
umov esi, ecx
umov [eax], ebx
umov cl, dh
umov bl, [eax]
umov cx, si
umov bx, [eax]
umov ecx, esi
umov ebx, [eax]
mov esi, tr3
mov tr3, esi
xbts cx, si
xbts bx, [eax]
xbts ecx, esi
xbts ebx, [eax]
ibts si, cx
ibts [eax], bx
ibts esi, ecx
ibts [eax], ebx
cmpxchg486 dh, cl
cmpxchg486 [eax], bl
cmpxchg486 si, cx
cmpxchg486 [eax], bx
cmpxchg486 esi, ecx
cmpxchg486 [eax], ebx
umonitor bp
umonitor ebp
jmpe word 0xa55a
jmpe 0xa55a3412
movdir64b bx, [bx+si]
movdir64b ebx, [eax]
enqcmds bx, [bx+si]
enqcmds ebx, [eax]
enqcmd bx, [bx+si]
enqcmd ebx, [eax]
mov eax, tr0
mov eax, tr1
mov eax, tr2
mov eax, tr3
mov eax, tr4
mov eax, tr5
mov eax, tr6
mov eax, tr7
syscall
sysret
a16 fs monitor
a16 fs monitorx
a16 fs clzero
fs umonitor bp
rep montmul
a16 rep montmul
rep xsha1
a16 rep xsha1
rep xsha256
a16 rep xsha256
rep xstore
a16 rep xstore
xstore
a16 xstore
rep xcryptecb
a16 rep xcryptecb
rep xcryptcbc
a16 rep xcryptcbc
rep xcryptctr
a16 rep xcryptctr
rep xcryptcfb
a16 rep xcryptcfb
rep xcryptofb
a16 rep xcryptofb
a16 pvalidate
pvalidate
serialize
xsusldtrk
xresldtrk
a16 invlpgb
invlpgb
tlbsync
cl1invmb
rdshr [eax]
rdshr edx
wrshr [eax]
wrshr edx
smint
dmint
rdm
svdc [eax], cs
rsdc cs, [eax]
svldt [eax]
rsldt [eax]
svts [eax]
rsts [eax]
smintold
bb0_reset
bb1_reset
cpu_write
cpu_read
altinst
paveb mm1, [eax]
paveb mm1, mm5
paddsiw mm1, [eax]
paddsiw mm1, mm5
pmagw mm1, [eax]
pmagw mm1, mm5
pdistib mm1, [eax]
psubsiw mm1, [eax]
psubsiw mm1, mm5
pmvzb mm1, [eax]
pmulhrwc mm1, [eax]
pmulhrwc mm1, mm5
pmvnzb mm1, [eax]
pmvlzb mm1, [eax]
pmvgezb mm1, [eax]
pmulhriw mm1, [eax]
pmulhriw mm1, mm5
pmachriw mm1, [eax]
undoc
undoc
ftstp
undoc
frint2
frichop
undoc
undoc
undoc
undoc
undoc
frinear
pfrcpv mm1, mm5
pfrcpv mm1, [eax-0x5aa5edcc]
pfrsqrtv mm1, mm5
pfrsqrtv mm1, [eax-0x5aa5edcc]
rep ccs_hash
a16 rep ccs_hash
rep ccs_encrypt
a16 rep ccs_encrypt
